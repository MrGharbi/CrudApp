{"ast":null,"code":"var _jsxFileName = \"/Users/mag/Desktop/github_project/CrudApp/front/src/components/AddButton/AddStudentButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal, Form, Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddStudentButton = () => {\n  _s();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [student, setStudent] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\"\n  });\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleOk = () => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(student)\n    };\n    fetch('http://localhost:8080/api/student', requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n    }).catch(error => {\n      console.error('There was an error!', error);\n    });\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Basic Modal\",\n      open: isModalOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"First Name\",\n          name: \"firstname\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your first name!\",\n            onChange: e => setStudent(Laststudent => ({ ...Laststudent,\n              firstname: e.target.value\n            })),\n            value: student.firstname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Last Name\",\n          name: \"lastname\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your last name!\",\n            onChange: e => setStudent(Laststudent => ({ ...Laststudent,\n              lastname: e.target.value\n            })),\n            value: student.lastname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Email\",\n          name: \"email\",\n          rules: [{\n            required: true,\n            type: 'email'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your email!\",\n            onChange: e => setStudent(Laststudent => ({ ...Laststudent,\n              email: e.target.value\n            })),\n            value: student.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddStudentButton, \"TsDCkPJltLbouQlAtIF6g3v2fZo=\");\n\n_c = AddStudentButton;\nexport default AddStudentButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStudentButton\");","map":{"version":3,"names":["React","useState","Button","Modal","Form","Input","AddStudentButton","isModalOpen","setIsModalOpen","student","setStudent","firstname","lastname","email","showModal","handleOk","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","data","json","ok","error","message","status","Promise","reject","catch","console","handleCancel","span","required","e","Laststudent","target","value","type"],"sources":["/Users/mag/Desktop/github_project/CrudApp/front/src/components/AddButton/AddStudentButton.js"],"sourcesContent":["import React ,{ useState } from 'react'\n\nimport { Button,Modal,Form,Input } from 'antd';\n\nconst AddStudentButton = () => {\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [student, setStudent] = useState({\n                                            firstname : \"\",\n                                            lastname : \"\",\n                                            email : \"\"\n                                            })\n\n    const showModal = () => {\n        setIsModalOpen(true);\n    };\n\n    const handleOk = () => {\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(student)\n        };\n        fetch('http://localhost:8080/api/student', requestOptions)\n            .then(async response => {\n                const data = await response.json();\n    \n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n    \n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n        setIsModalOpen(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalOpen(false);\n    };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        Open Modal\n      </Button>\n      <Modal title=\"Basic Modal\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n            <Form\n            name=\"basic\"\n            labelCol={{ span: 8 }}\n            wrapperCol={{ span: 16 }}\n            autoComplete=\"off\"\n            >\n                <Form.Item\n                    label=\"First Name\"\n                    name=\"firstname\"\n                    rules={[{ required: true }]}\n                >\n                    <Input placeholder= \"Please input your first name!\" \n                            onChange={((e)=>setStudent(Laststudent=>(\n                                                                    {\n                                                                        ...Laststudent,\n                                                                        firstname: e.target.value,\n                                                                    }\n                                                                    )))}\n                            value={student.firstname}\n                                                                    />\n                </Form.Item>\n                <Form.Item\n                    label=\"Last Name\"\n                    name=\"lastname\"\n                    rules={[{ required: true}]}\n                >\n                    <Input placeholder= 'Please input your last name!' \n                            onChange={((e)=>setStudent(Laststudent=>(\n                                                                    {\n                                                                        ...Laststudent,\n                                                                        lastname: e.target.value,\n                                                                    }\n                                                                    )))}\n                            value={student.lastname}\n                    />\n                </Form.Item>\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[{ required: true, type: 'email' }]}\n                >\n                    <Input placeholder= 'Please input your email!'\n                            onChange={((e)=>setStudent(Laststudent=>(\n                                                                    {\n                                                                        ...Laststudent,\n                                                                        email: e.target.value,\n                                                                    }\n                                                                    )))}\n                            value={student.email}\n                    />\n                </Form.Item>\n            </Form>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddStudentButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,EAAgBC,KAAhB,EAAsBC,IAAtB,EAA2BC,KAA3B,QAAwC,MAAxC;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAE3B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;IACCU,SAAS,EAAG,EADb;IAECC,QAAQ,EAAG,EAFZ;IAGCC,KAAK,EAAG;EAHT,CAAD,CAAtC;;EAMA,MAAMC,SAAS,GAAG,MAAM;IACpBN,cAAc,CAAC,IAAD,CAAd;EACH,CAFD;;EAIA,MAAMO,QAAQ,GAAG,MAAM;IACnB,MAAMC,cAAc,GAAG;MACnBC,MAAM,EAAE,KADW;MAEnBC,OAAO,EAAE;QAAE,gBAAgB;MAAlB,CAFU;MAGnBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,OAAf;IAHa,CAAvB;IAKAa,KAAK,CAAC,mCAAD,EAAsCN,cAAtC,CAAL,CACKO,IADL,CACU,MAAMC,QAAN,IAAkB;MACpB,MAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB,CADoB,CAGpB;;MACA,IAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;QACd;QACA,MAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BL,QAAQ,CAACM,MAAjD;QACA,OAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;MACH;IAEJ,CAXL,EAYKK,KAZL,CAYWL,KAAK,IAAI;MACZM,OAAO,CAACN,KAAR,CAAc,qBAAd,EAAqCA,KAArC;IACH,CAdL;IAeApB,cAAc,CAAC,KAAD,CAAd;EACH,CAtBD;;EAwBA,MAAM2B,YAAY,GAAG,MAAM;IACvB3B,cAAc,CAAC,KAAD,CAAd;EACH,CAFD;;EAIF,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,IAAI,EAAC,SAAb;MAAuB,OAAO,EAAEM,SAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,KAAD;MAAO,KAAK,EAAC,aAAb;MAA2B,IAAI,EAAEP,WAAjC;MAA8C,IAAI,EAAEQ,QAApD;MAA8D,QAAQ,EAAEoB,YAAxE;MAAA,uBACM,QAAC,IAAD;QACA,IAAI,EAAC,OADL;QAEA,QAAQ,EAAE;UAAEC,IAAI,EAAE;QAAR,CAFV;QAGA,UAAU,EAAE;UAAEA,IAAI,EAAE;QAAR,CAHZ;QAIA,YAAY,EAAC,KAJb;QAAA,wBAMI,QAAC,IAAD,CAAM,IAAN;UACI,KAAK,EAAC,YADV;UAEI,IAAI,EAAC,WAFT;UAGI,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAZ,CAAD,CAHX;UAAA,uBAKI,QAAC,KAAD;YAAO,WAAW,EAAE,+BAApB;YACQ,QAAQ,EAAIC,CAAD,IAAK5B,UAAU,CAAC6B,WAAW,KACE,EACI,GAAGA,WADP;cAEI5B,SAAS,EAAE2B,CAAC,CAACE,MAAF,CAASC;YAFxB,CADF,CAAZ,CADlC;YAOQ,KAAK,EAAEhC,OAAO,CAACE;UAPvB;YAAA;YAAA;YAAA;UAAA;QALJ;UAAA;UAAA;UAAA;QAAA,QANJ,eAqBI,QAAC,IAAD,CAAM,IAAN;UACI,KAAK,EAAC,WADV;UAEI,IAAI,EAAC,UAFT;UAGI,KAAK,EAAE,CAAC;YAAE0B,QAAQ,EAAE;UAAZ,CAAD,CAHX;UAAA,uBAKI,QAAC,KAAD;YAAO,WAAW,EAAE,8BAApB;YACQ,QAAQ,EAAIC,CAAD,IAAK5B,UAAU,CAAC6B,WAAW,KACE,EACI,GAAGA,WADP;cAEI3B,QAAQ,EAAE0B,CAAC,CAACE,MAAF,CAASC;YAFvB,CADF,CAAZ,CADlC;YAOQ,KAAK,EAAEhC,OAAO,CAACG;UAPvB;YAAA;YAAA;YAAA;UAAA;QALJ;UAAA;UAAA;UAAA;QAAA,QArBJ,eAoCI,QAAC,IAAD,CAAM,IAAN;UACI,KAAK,EAAC,OADV;UAEI,IAAI,EAAC,OAFT;UAGI,KAAK,EAAE,CAAC;YAAEyB,QAAQ,EAAE,IAAZ;YAAkBK,IAAI,EAAE;UAAxB,CAAD,CAHX;UAAA,uBAKI,QAAC,KAAD;YAAO,WAAW,EAAE,0BAApB;YACQ,QAAQ,EAAIJ,CAAD,IAAK5B,UAAU,CAAC6B,WAAW,KACE,EACI,GAAGA,WADP;cAEI1B,KAAK,EAAEyB,CAAC,CAACE,MAAF,CAASC;YAFpB,CADF,CAAZ,CADlC;YAOQ,KAAK,EAAEhC,OAAO,CAACI;UAPvB;YAAA;YAAA;YAAA;UAAA;QALJ;UAAA;UAAA;UAAA;QAAA,QApCJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADN;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AA6DD,CAtGD;;GAAMP,gB;;KAAAA,gB;AAwGN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}