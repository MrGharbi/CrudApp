{"ast":null,"code":"var _jsxFileName = \"/Users/mag/Desktop/github_project/CrudApp/front/src/components/AddButton/AddStudentButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal, Form, Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddStudentButton = () => {\n  _s();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Basic Modal\",\n      open: isModalOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"First Name\",\n          name: \"firstname\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your first name!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Last Name\",\n          name: \"lastname\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your last name!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Email\",\n          name: \"email\",\n          rules: [{\n            required: true,\n            type: 'email'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your email!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddStudentButton, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n\n_c = AddStudentButton;\nexport default AddStudentButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStudentButton\");","map":{"version":3,"names":["React","useState","Button","Modal","Form","Input","AddStudentButton","isModalOpen","setIsModalOpen","showModal","handleOk","handleCancel","span","required","type"],"sources":["/Users/mag/Desktop/github_project/CrudApp/front/src/components/AddButton/AddStudentButton.js"],"sourcesContent":["import React ,{ useState } from 'react'\n\nimport { Button,Modal,Form,Input } from 'antd';\n\nconst AddStudentButton = () => {\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const showModal = () => {\n        setIsModalOpen(true);\n    };\n\n    const handleOk = () => {\n        setIsModalOpen(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalOpen(false);\n    };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        Open Modal\n      </Button>\n      <Modal title=\"Basic Modal\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n            <Form\n            name=\"basic\"\n            labelCol={{ span: 8 }}\n            wrapperCol={{ span: 16 }}\n            autoComplete=\"off\"\n            >\n                <Form.Item\n                    label=\"First Name\"\n                    name=\"firstname\"\n                    rules={[{ required: true }]}\n                >\n                    <Input placeholder= \"Please input your first name!\"/>\n                </Form.Item>\n                <Form.Item\n                    label=\"Last Name\"\n                    name=\"lastname\"\n                    rules={[{ required: true}]}\n                >\n                    <Input placeholder= 'Please input your last name!' />\n                </Form.Item>\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[{ required: true, type: 'email' }]}\n                >\n                    <Input placeholder= 'Please input your email!'/>\n                </Form.Item>\n            </Form>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddStudentButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,EAAgBC,KAAhB,EAAsBC,IAAtB,EAA2BC,KAA3B,QAAwC,MAAxC;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAE3B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;;EAEA,MAAMQ,SAAS,GAAG,MAAM;IACpBD,cAAc,CAAC,IAAD,CAAd;EACH,CAFD;;EAIA,MAAME,QAAQ,GAAG,MAAM;IACnBF,cAAc,CAAC,KAAD,CAAd;EACH,CAFD;;EAIA,MAAMG,YAAY,GAAG,MAAM;IACvBH,cAAc,CAAC,KAAD,CAAd;EACH,CAFD;;EAIF,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,IAAI,EAAC,SAAb;MAAuB,OAAO,EAAEC,SAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,KAAD;MAAO,KAAK,EAAC,aAAb;MAA2B,IAAI,EAAEF,WAAjC;MAA8C,IAAI,EAAEG,QAApD;MAA8D,QAAQ,EAAEC,YAAxE;MAAA,uBACM,QAAC,IAAD;QACA,IAAI,EAAC,OADL;QAEA,QAAQ,EAAE;UAAEC,IAAI,EAAE;QAAR,CAFV;QAGA,UAAU,EAAE;UAAEA,IAAI,EAAE;QAAR,CAHZ;QAIA,YAAY,EAAC,KAJb;QAAA,wBAMI,QAAC,IAAD,CAAM,IAAN;UACI,KAAK,EAAC,YADV;UAEI,IAAI,EAAC,WAFT;UAGI,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAZ,CAAD,CAHX;UAAA,uBAKI,QAAC,KAAD;YAAO,WAAW,EAAE;UAApB;YAAA;YAAA;YAAA;UAAA;QALJ;UAAA;UAAA;UAAA;QAAA,QANJ,eAaI,QAAC,IAAD,CAAM,IAAN;UACI,KAAK,EAAC,WADV;UAEI,IAAI,EAAC,UAFT;UAGI,KAAK,EAAE,CAAC;YAAEA,QAAQ,EAAE;UAAZ,CAAD,CAHX;UAAA,uBAKI,QAAC,KAAD;YAAO,WAAW,EAAE;UAApB;YAAA;YAAA;YAAA;UAAA;QALJ;UAAA;UAAA;UAAA;QAAA,QAbJ,eAoBI,QAAC,IAAD,CAAM,IAAN;UACI,KAAK,EAAC,OADV;UAEI,IAAI,EAAC,OAFT;UAGI,KAAK,EAAE,CAAC;YAAEA,QAAQ,EAAE,IAAZ;YAAkBC,IAAI,EAAE;UAAxB,CAAD,CAHX;UAAA,uBAKI,QAAC,KAAD;YAAO,WAAW,EAAE;UAApB;YAAA;YAAA;YAAA;UAAA;QALJ;UAAA;UAAA;UAAA;QAAA,QApBJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADN;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAqCD,CArDD;;GAAMR,gB;;KAAAA,gB;AAuDN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}